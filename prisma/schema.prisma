// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Category {
  id       Int       @id @default(autoincrement())
  name     String
  type     String
  projects Project[]
}

model Project {
  id          Int           @id @default(autoincrement())
  name        String
  description String
  categoryId  Int
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @default(now())
  category    Category      @relation(fields: [categoryId], references: [id])
  tasks       Task[]
  taskProject TaskProject[]
}

model Task {
  id          Int           @id @default(autoincrement())
  name        String
  description String
  status      String
  priority    String
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @default(now())
  projectId   Int
  project     Project       @relation(fields: [projectId], references: [id])
  taskProject TaskProject[]
}

model TaskProject {
  projectId Int
  taskId    Int
  project   Project @relation(fields: [projectId], references: [id])
  task      Task    @relation(fields: [taskId], references: [id])

  @@id([projectId, taskId])
}

model User {
  id       Int    @id @default(autoincrement())
  name     String
  lastName String
  password String
  rolId    Int
  rol      Rol    @relation(fields: [rolId], references: [id])
}

model Rol {
  id   Int    @id @default(autoincrement())
  name String
  User User[]
}
